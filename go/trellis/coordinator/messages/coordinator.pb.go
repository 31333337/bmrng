// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: coordinator.proto

package coord

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	// Token public key
	TokenPublicKey []byte `protobuf:"bytes,2,opt,name=token_public_key,json=tokenPublicKey,proto3" json:"token_public_key,omitempty"`
	// Secret share
	TokenKeyShare []byte `protobuf:"bytes,3,opt,name=token_key_share,json=tokenKeyShare,proto3" json:"token_key_share,omitempty"`
	// Group key
	GroupKey []byte `protobuf:"bytes,4,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	// Group share
	GroupShare []byte `protobuf:"bytes,5,opt,name=group_share,json=groupShare,proto3" json:"group_share,omitempty"`
}

func (x *KeyInformation) Reset() {
	*x = KeyInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyInformation) ProtoMessage() {}

func (x *KeyInformation) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyInformation.ProtoReflect.Descriptor instead.
func (*KeyInformation) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{0}
}

func (x *KeyInformation) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *KeyInformation) GetTokenPublicKey() []byte {
	if x != nil {
		return x.TokenPublicKey
	}
	return nil
}

func (x *KeyInformation) GetTokenKeyShare() []byte {
	if x != nil {
		return x.TokenKeyShare
	}
	return nil
}

func (x *KeyInformation) GetGroupKey() []byte {
	if x != nil {
		return x.GroupKey
	}
	return nil
}

func (x *KeyInformation) GetGroupShare() []byte {
	if x != nil {
		return x.GroupShare
	}
	return nil
}

type RoundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round             int64           `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	NumLayers         int64           `protobuf:"varint,2,opt,name=numLayers,proto3" json:"numLayers,omitempty"`
	BinSize           int64           `protobuf:"varint,3,opt,name=binSize,proto3" json:"binSize,omitempty"`
	PathEstablishment bool            `protobuf:"varint,4,opt,name=pathEstablishment,proto3" json:"pathEstablishment,omitempty"`
	LastLayer         bool            `protobuf:"varint,5,opt,name=lastLayer,proto3" json:"lastLayer,omitempty"`
	MessageSize       int64           `protobuf:"varint,6,opt,name=messageSize,proto3" json:"messageSize,omitempty"`
	StartId           int64           `protobuf:"varint,7,opt,name=startId,proto3" json:"startId,omitempty"`
	EndId             int64           `protobuf:"varint,8,opt,name=endId,proto3" json:"endId,omitempty"`
	PublicKeys        *KeyInformation `protobuf:"bytes,9,opt,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	ReceiptLayer      int64           `protobuf:"varint,10,opt,name=receiptLayer,proto3" json:"receiptLayer,omitempty"`
	BoomerangLimit    int64           `protobuf:"varint,11,opt,name=boomerangLimit,proto3" json:"boomerangLimit,omitempty"`
	NextLayer         int64           `protobuf:"varint,12,opt,name=nextLayer,proto3" json:"nextLayer,omitempty"`
	Check             bool            `protobuf:"varint,13,opt,name=check,proto3" json:"check,omitempty"`
	Interval          int64           `protobuf:"varint,14,opt,name=interval,proto3" json:"interval,omitempty"`
	SkipPathGen       bool            `protobuf:"varint,15,opt,name=skipPathGen,proto3" json:"skipPathGen,omitempty"`
}

func (x *RoundInfo) Reset() {
	*x = RoundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundInfo) ProtoMessage() {}

func (x *RoundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundInfo.ProtoReflect.Descriptor instead.
func (*RoundInfo) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{1}
}

func (x *RoundInfo) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *RoundInfo) GetNumLayers() int64 {
	if x != nil {
		return x.NumLayers
	}
	return 0
}

func (x *RoundInfo) GetBinSize() int64 {
	if x != nil {
		return x.BinSize
	}
	return 0
}

func (x *RoundInfo) GetPathEstablishment() bool {
	if x != nil {
		return x.PathEstablishment
	}
	return false
}

func (x *RoundInfo) GetLastLayer() bool {
	if x != nil {
		return x.LastLayer
	}
	return false
}

func (x *RoundInfo) GetMessageSize() int64 {
	if x != nil {
		return x.MessageSize
	}
	return 0
}

func (x *RoundInfo) GetStartId() int64 {
	if x != nil {
		return x.StartId
	}
	return 0
}

func (x *RoundInfo) GetEndId() int64 {
	if x != nil {
		return x.EndId
	}
	return 0
}

func (x *RoundInfo) GetPublicKeys() *KeyInformation {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *RoundInfo) GetReceiptLayer() int64 {
	if x != nil {
		return x.ReceiptLayer
	}
	return 0
}

func (x *RoundInfo) GetBoomerangLimit() int64 {
	if x != nil {
		return x.BoomerangLimit
	}
	return 0
}

func (x *RoundInfo) GetNextLayer() int64 {
	if x != nil {
		return x.NextLayer
	}
	return 0
}

func (x *RoundInfo) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *RoundInfo) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *RoundInfo) GetSkipPathGen() bool {
	if x != nil {
		return x.SkipPathGen
	}
	return false
}

type ServerMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages [][]byte `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ServerMessages) Reset() {
	*x = ServerMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessages) ProtoMessage() {}

func (x *ServerMessages) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessages.ProtoReflect.Descriptor instead.
func (*ServerMessages) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{2}
}

func (x *ServerMessages) GetMessages() [][]byte {
	if x != nil {
		return x.Messages
	}
	return nil
}

// to skip path establishment and only test broadcast
type BootstrapKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int64 `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ServerId int64 `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Layer    int64 `protobuf:"varint,3,opt,name=layer,proto3" json:"layer,omitempty"`
	// server that decrypted messages will be sent to
	ForwardingServer int64  `protobuf:"varint,4,opt,name=forwardingServer,proto3" json:"forwardingServer,omitempty"`
	PrevServer       int64  `protobuf:"varint,5,opt,name=prevServer,proto3" json:"prevServer,omitempty"`
	PrivateKey       []byte `protobuf:"bytes,6,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	PublicKey        []byte `protobuf:"bytes,7,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	SharedKey        []byte `protobuf:"bytes,8,opt,name=sharedKey,proto3" json:"sharedKey,omitempty"`
	// (public) keys appended for next destination
	NextKey []byte `protobuf:"bytes,9,opt,name=nextKey,proto3" json:"nextKey,omitempty"`
}

func (x *BootstrapKey) Reset() {
	*x = BootstrapKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapKey) ProtoMessage() {}

func (x *BootstrapKey) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapKey.ProtoReflect.Descriptor instead.
func (*BootstrapKey) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{3}
}

func (x *BootstrapKey) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *BootstrapKey) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *BootstrapKey) GetLayer() int64 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *BootstrapKey) GetForwardingServer() int64 {
	if x != nil {
		return x.ForwardingServer
	}
	return 0
}

func (x *BootstrapKey) GetPrevServer() int64 {
	if x != nil {
		return x.PrevServer
	}
	return 0
}

func (x *BootstrapKey) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *BootstrapKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *BootstrapKey) GetSharedKey() []byte {
	if x != nil {
		return x.SharedKey
	}
	return nil
}

func (x *BootstrapKey) GetNextKey() []byte {
	if x != nil {
		return x.NextKey
	}
	return nil
}

type PathKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*BootstrapKey `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *PathKeys) Reset() {
	*x = PathKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathKeys) ProtoMessage() {}

func (x *PathKeys) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathKeys.ProtoReflect.Descriptor instead.
func (*PathKeys) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{4}
}

func (x *PathKeys) GetKeys() []*BootstrapKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

// to skip message creation and only test routing
type TestMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartingServers []int64  `protobuf:"varint,1,rep,packed,name=startingServers,proto3" json:"startingServers,omitempty"`
	Ciphers         [][]byte `protobuf:"bytes,2,rep,name=ciphers,proto3" json:"ciphers,omitempty"`
}

func (x *TestMessages) Reset() {
	*x = TestMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMessages) ProtoMessage() {}

func (x *TestMessages) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMessages.ProtoReflect.Descriptor instead.
func (*TestMessages) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{5}
}

func (x *TestMessages) GetStartingServers() []int64 {
	if x != nil {
		return x.StartingServers
	}
	return nil
}

func (x *TestMessages) GetCiphers() [][]byte {
	if x != nil {
		return x.Ciphers
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{6}
}

var File_coordinator_proto protoreflect.FileDescriptor

var file_coordinator_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x0e, 0x4b,
	0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0xed, 0x03, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x75, 0x6d, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6e, 0x75, 0x6d, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61, 0x74, 0x68, 0x45, 0x73, 0x74, 0x61, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x70, 0x61, 0x74, 0x68, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x4b,
	0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x0e, 0x62, 0x6f, 0x6f, 0x6d, 0x65, 0x72, 0x61, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6d, 0x65, 0x72, 0x61, 0x6e, 0x67,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x50, 0x61, 0x74,
	0x68, 0x47, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x47, 0x65, 0x6e, 0x22, 0x2c, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x9e, 0x02, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6e,
	0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x33, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x52, 0x0a, 0x0c, 0x54,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x73, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xcb, 0x02, 0x0a, 0x12, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x06, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0c, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0c, 0x2e, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coordinator_proto_rawDescOnce sync.Once
	file_coordinator_proto_rawDescData = file_coordinator_proto_rawDesc
)

func file_coordinator_proto_rawDescGZIP() []byte {
	file_coordinator_proto_rawDescOnce.Do(func() {
		file_coordinator_proto_rawDescData = protoimpl.X.CompressGZIP(file_coordinator_proto_rawDescData)
	})
	return file_coordinator_proto_rawDescData
}

var file_coordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_coordinator_proto_goTypes = []interface{}{
	(*KeyInformation)(nil), // 0: coord.KeyInformation
	(*RoundInfo)(nil),      // 1: coord.RoundInfo
	(*ServerMessages)(nil), // 2: coord.ServerMessages
	(*BootstrapKey)(nil),   // 3: coord.BootstrapKey
	(*PathKeys)(nil),       // 4: coord.PathKeys
	(*TestMessages)(nil),   // 5: coord.TestMessages
	(*Empty)(nil),          // 6: coord.Empty
}
var file_coordinator_proto_depIdxs = []int32{
	0, // 0: coord.RoundInfo.public_keys:type_name -> coord.KeyInformation
	3, // 1: coord.PathKeys.keys:type_name -> coord.BootstrapKey
	0, // 2: coord.CoordinatorHandler.KeySet:input_type -> coord.KeyInformation
	1, // 3: coord.CoordinatorHandler.RoundSetup:input_type -> coord.RoundInfo
	1, // 4: coord.CoordinatorHandler.ClientStart:input_type -> coord.RoundInfo
	1, // 5: coord.CoordinatorHandler.RoundStart:input_type -> coord.RoundInfo
	1, // 6: coord.CoordinatorHandler.CheckReceipt:input_type -> coord.RoundInfo
	1, // 7: coord.CoordinatorHandler.GetMessages:input_type -> coord.RoundInfo
	0, // 8: coord.CoordinatorHandler.KeySet:output_type -> coord.KeyInformation
	6, // 9: coord.CoordinatorHandler.RoundSetup:output_type -> coord.Empty
	6, // 10: coord.CoordinatorHandler.ClientStart:output_type -> coord.Empty
	6, // 11: coord.CoordinatorHandler.RoundStart:output_type -> coord.Empty
	6, // 12: coord.CoordinatorHandler.CheckReceipt:output_type -> coord.Empty
	2, // 13: coord.CoordinatorHandler.GetMessages:output_type -> coord.ServerMessages
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_coordinator_proto_init() }
func file_coordinator_proto_init() {
	if File_coordinator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coordinator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coordinator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coordinator_proto_goTypes,
		DependencyIndexes: file_coordinator_proto_depIdxs,
		MessageInfos:      file_coordinator_proto_msgTypes,
	}.Build()
	File_coordinator_proto = out.File
	file_coordinator_proto_rawDesc = nil
	file_coordinator_proto_goTypes = nil
	file_coordinator_proto_depIdxs = nil
}
